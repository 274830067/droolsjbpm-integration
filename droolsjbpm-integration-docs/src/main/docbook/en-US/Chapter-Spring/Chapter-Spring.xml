<?xml version="1.0" encoding="UTF-8"?>
<chapter id="ch.spring"
         version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Spring Integration</title>

  <section>
    <title>Integration with Drools Expert</title>

    <para>In this section we will explain the drools namespace.</para>

    <section>
      <title>Define a Resource</title>

      <para>Execution nodes are a context to register ksessions and kbases
      against for lookup.</para>

      <section>
        <title>&lt;drools:execution-node&gt;'s parameters as
        attributes:</title>

        <table>
          <tgroup align="left" cols="3" colsep="1" rowsep="1">
            <thead>
              <row>
                <entry align="center">Attribute</entry>

                <entry align="center">Description</entry>

                <entry align="center">Required</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>id</entry>

                <entry>Bean's <emphasis>id</emphasis> is the name to be
                reference from other beans.</entry>

                <entry>Yes</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </section>

      <section>
        <title>&lt;drools:resource&gt;'s parameters as attributes:</title>

        <table>
          <tgroup align="left" cols="3" colsep="1" rowsep="1">
            <thead>
              <row>
                <entry align="center">Attribute</entry>

                <entry align="center">Description</entry>

                <entry align="center">Required</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>id</entry>

                <entry>Bean's <emphasis>id</emphasis> is the name to be
                reference from other beans.</entry>

                <entry>Yes, but can be omitted when this tag is
                nested.</entry>
              </row>

              <row>
                <entry>source</entry>

                <entry>The path to the file containing the actual
                resource.</entry>

                <entry>Yes</entry>
              </row>

              <row>
                <entry>type</entry>

                <entry>Type of the Resource as is defined in class
                <classname>ResourceType</classname>.</entry>

                <entry>No, default to DRL</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </section>

      <section>
        <title>&lt;drools:resource&gt;'s parameters as nested
        elements:</title>

        <para>When configuring a <emphasis>decision table</emphasis> resource
        you can nest a <emphasis>&lt;drools:decisiontable-conf&gt;</emphasis>
        tag to configure the resource.</para>

        <table>
          <tgroup align="left" cols="3" colsep="1" rowsep="1">
            <thead>
              <row>
                <entry align="center">Attribute</entry>

                <entry align="center">Description</entry>

                <entry align="center">Required</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>input-type</entry>

                <entry>Decision Table input type: XLS or CSV</entry>

                <entry>No</entry>
              </row>

              <row>
                <entry>worksheet-name</entry>

                <entry>The worksheet name to be used in the when using an
                XLS</entry>

                <entry>No</entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <example>
          <title>resource definition example</title>

          <programlisting language="xml">&lt;drools:resource source="classpath:org/drools/IntegrationExampleTest.xls"
                 type="DTABLE"&gt;
   &lt;drools:decisiontable-conf input-type="XLS" worksheet-name="Tables_2" /&gt;
&lt;/drools:resource&gt;</programlisting>
        </example>
      </section>

      <section>
        <title>Define a KnowledgeBase</title>

        <section>
          <title>&lt;drools:kbase&gt;'s parameters as attributes:</title>

          <table>
            <tgroup align="left" cols="3" colsep="1" rowsep="1">
              <thead>
                <row>
                  <entry align="center">Attribute</entry>

                  <entry align="center">Description</entry>

                  <entry align="center">Required</entry>
                </row>
              </thead>

              <tbody>
                <row>
                  <entry>id</entry>

                  <entry>Bean's <emphasis>id</emphasis> is the name to be
                  referenced from other beans.</entry>

                  <entry>Yes</entry>
                </row>

                <row>
                  <entry>node</entry>

                  <entry>Execution-Node context to register the kbase
                  with</entry>

                  <entry>no</entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>

        <section>
          <title>&lt;drools:kbase&gt;'s parameters as nested elements:</title>

          <para>A Knowledge Base has a 0..n resources. Has two nested
          elements, resources and configurations. Those resources can be inner
          elements or references, using the "ref" attribute.</para>

          <example>
            <title>kbase definition example</title>

            <programlisting language="xml">&lt;drools:kbase id="kbase1" node="node1"&gt;
   &lt;drools:resources&gt; 
      &lt;drools:resource source="classpath:org/drools/spring/IntegrationExampleTest.xls" 
                    type="DTABLE"&gt;
         &lt;drools:decisiontable-conf input-type="XLS" worksheet-name="Table_2" /&gt;
      &lt;/drools:resource&gt;

      &lt;drools:resource ref="resource1"/&gt;

      &lt;drools:resource source="classpath:org/drools/container/spring/model.xsd" /&gt;
   &lt;/drools:resources&gt;

   &lt;drools:configuration&gt;
       &lt;drools:mbeans enabled="true" /&gt;

      &lt;drools:accumulate-functions&gt;
         &lt;drools:accumulate-function name="func1" ref="func1Instance" /&gt;
         &lt;drools:accumulate-function name="func1" ref="func2Instance" /&gt;
      &lt;/drools:accumulate-functions&gt;
   &lt;/drools:configuration&gt;

&lt;/drools:kbase&gt;
</programlisting>
          </example>

          <figure>
            <title>Knowledge Base Configuration Options</title>

            <itemizedlist>
              <listitem>
                <para>advanced-process-rule-integration</para>

                <itemizedlist>
                  <listitem>
                    <para>enabled = true : false</para>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>multithread</para>

                <itemizedlist>
                  <listitem>
                    <para>enabled = true : false</para>
                  </listitem>

                  <listitem>
                    <para>max-threads = 1..n</para>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>mbeans</para>

                <itemizedlist>
                  <listitem>
                    <para>enabled = true : false</para>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>event-processing-mode</para>

                <itemizedlist>
                  <listitem>
                    <para>mode = STREAM : CLOUD</para>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>accumulate-functions</para>

                <itemizedlist>
                  <listitem>
                    <para>accumulate-function 0..n</para>

                    <itemizedlist>
                      <listitem>
                        <para>name = String</para>
                      </listitem>

                      <listitem>
                        <para>ref = String</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>evaluators</para>

                <itemizedlist>
                  <listitem>
                    <para>evaluator 0..n</para>

                    <itemizedlist>
                      <listitem>
                        <para>name = String</para>
                      </listitem>

                      <listitem>
                        <para>ref = String</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>assert-behavior</para>

                <itemizedlist>
                  <listitem>
                    <para>mode = IDENTITY : EQUALITY</para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist>
          </figure>
        </section>
      </section>

      <section>
        <title>Define KnowledgeSessions</title>

        <section>
          <title>&lt;drools:ksession&gt;'s parameters as attributes:</title>

          <table>
            <tgroup align="left" cols="3" colsep="1" rowsep="1">
              <thead>
                <row>
                  <entry align="center">Attribute</entry>

                  <entry align="center">Description</entry>

                  <entry align="center">Required</entry>
                </row>
              </thead>

              <tbody>
                <row>
                  <entry>id</entry>

                  <entry>Bean's <emphasis>id</emphasis> is the name to be
                  referenced from other beans.</entry>

                  <entry>Yes</entry>
                </row>

                <row>
                  <entry>type</entry>

                  <entry>is the session <emphasis>stateful</emphasis> or
                  <emphasis>stateless?</emphasis></entry>

                  <entry>Yes</entry>
                </row>

                <row>
                  <entry>name</entry>

                  <entry />

                  <entry>No; defaults to <emphasis>id</emphasis> when
                  omitted.</entry>
                </row>

                <row>
                  <entry>node</entry>

                  <entry>Execution-Node context to register the ksession
                  with</entry>

                  <entry>no</entry>
                </row>

                <row>
                  <entry>listeners</entry>

                  <entry>Specifies the reference to the event listeners group
                  (see <link linkend="grouping-listeners">'Defining a Group of
                  listeners'</link> section below).</entry>

                  <entry>no</entry>
                </row>
              </tbody>
            </tgroup>
          </table>

          <example>
            <title>ksession definition example</title>

            <programlisting language="xml">&lt;drools:ksession id="ksession1" type="stateless" 
                  name="stateless1" kbase="kbase1"/&gt;

&lt;drools:ksession id="ksession2" type="stateful" kbase="kbase1"/&gt;

&lt;drools:ksession id="ksession3" type="stateful" kbase="kbase2&gt;

   &lt;drools:batch&gt;
      &lt;drools:insert-object ref="person" /&gt;

      &lt;drools:set-global identifier="list1"&gt;
          &lt;bean class="java.util.ArrayList" /&gt;
      &lt;/drools:set-global&gt;

      &lt;drools:startProcess process-id="start fire"&gt; 

   &lt;/drools:batch&gt;

   &lt;drools:configurations&gt;
     &lt;drools:keep-reference enabled="false" /&gt;
     &lt;drools:clock-type type="PSEUDO"  /&gt;
   &lt;/drools:configurations&gt;

&lt;/drools:ksession&gt;
</programlisting>
          </example>

          <figure>
            <title>Knowledge Session Configuration Options</title>

            <itemizedlist>
              <listitem>
                <para>keep-reference</para>

                <itemizedlist>
                  <listitem>
                    <para>enabled = true : false</para>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>clock-type</para>

                <itemizedlist>
                  <listitem>
                    <para>type = REALTIME : PSEUDO</para>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>jpa-persistence</para>

                <itemizedlist>
                  <listitem>
                    <para>transaction-manager</para>

                    <itemizedlist>
                      <listitem>
                        <para>ref = String</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>

                  <listitem>
                    <para>entity-manager-factory</para>

                    <itemizedlist>
                      <listitem>
                        <para>ref = String</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist>
          </figure>

          <figure>
            <title>Initialization Batch Commands</title>

            <itemizedlist>
              <listitem>
                <para>insert-object</para>

                <itemizedlist>
                  <listitem>
                    <para>ref = String (optional)</para>
                  </listitem>

                  <listitem>
                    <para>Anonymous bean</para>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>set-global</para>

                <itemizedlist>
                  <listitem>
                    <para>identifier = String (required)</para>
                  </listitem>
                </itemizedlist>

                <itemizedlist>
                  <listitem>
                    <para>reg = String (optiona)</para>
                  </listitem>

                  <listitem>
                    <para>Anonymous bean</para>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>fire-all-rules</para>

                <itemizedlist>
                  <listitem>
                    <para>max : n</para>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>fire-until-halt</para>
              </listitem>

              <listitem>
                <para>start-process</para>

                <itemizedlist>
                  <listitem>
                    <para>parameter</para>

                    <itemizedlist>
                      <listitem>
                        <para>identifier = String (required)</para>
                      </listitem>

                      <listitem>
                        <para>ref = String (optional)</para>
                      </listitem>

                      <listitem>
                        <para>Anonymous bean</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>signal-event</para>

                <itemizedlist>
                  <listitem>
                    <para>ref = String (optional)</para>
                  </listitem>

                  <listitem>
                    <para>event-type = String (required)</para>
                  </listitem>

                  <listitem>
                    <para>process-instance-id =n (optional)</para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist>
          </figure>

          <example>
            <title>ksession JPA configuration example</title>

            <programlisting language="xml">&lt;drools:kstore id="kstore" /&gt; &lt;!-- provides KnowledgeStoreService implementation --&gt;

&lt;bean id="myEmf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"&gt;
   &lt;property name="dataSource" ref="ds" /&gt;
   &lt;property name="persistenceUnitName" value="org.drools.persistence.jpa.local" /&gt;
&lt;/bean&gt;

&lt;bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager"&gt;
   &lt;property name="entityManagerFactory" ref="myEmf" /&gt;
&lt;/bean&gt;
   
&lt;drools:ksession id="jpaSingleSessionCommandService" type="stateful"  kbase="kbProcessWorkItems"&gt;
   &lt;drools:configuration&gt;
      &lt;drools:jpa-persistence&gt;
         &lt;drools:transaction-manager ref="txManager" /&gt;
         &lt;drools:entity-manager-factory ref="myEmf" /&gt;   
      &lt;/drools:jpa-persistence&gt;
   &lt;/drools:configuration&gt;
&lt;/drools:ksession&gt;
</programlisting>
          </example>
        </section>

        <section>
          <title>&lt;drools:ksession&gt;'s parameters as nested
          elements:</title>

          <para>When configuring a <emphasis>Event Listener</emphasis>
          resource you can nest a
          <emphasis>&lt;drools:eventListener&gt;</emphasis> tag to configure
          the listener.</para>
        </section>
      </section>
    </section>

    <section>
      <title>Event Listeners</title>

      <para>Drools supports adding 3 types of listeners to KnowledgeSessions -
      <emphasis>AgendaListener</emphasis>,
      <emphasis>WorkingMemoryListener</emphasis>,
      <emphasis>ProcessEventListener</emphasis></para>

      <para>The drools-spring module allows you to configure these listeners
      to KnowledgeSessions using XML tags. These tags have identical names as
      the actual listener interfaces i.e.,
      &lt;drools:agendaEventListener....&gt;,
      &lt;drools:workingMemoryEventListener....&gt; and
      &lt;drools:processEventListener....&gt;.</para>

      <para>drools-spring provides features to define the listeners as
      standalone (individual) listeners and also to define them as a
      group.</para>

      <section>
        <title>Defining Stand alone Listeners:</title>

        <section>
          <title>Attributes:</title>

          <table>
            <tgroup align="left" cols="3" colsep="1" rowsep="1">
              <thead>
                <row>
                  <entry align="center">Attribute</entry>

                  <entry align="center">Required</entry>

                  <entry align="center">Description</entry>
                </row>
              </thead>

              <tbody>
                <row>
                  <entry>ref</entry>

                  <entry>No</entry>

                  <entry>A reference to another declared bean.
                  <para /></entry>
                </row>
              </tbody>
            </tgroup>
          </table>

          <example>
            <title>Listener configuration example - using a bean:ref.</title>

            <programlisting language="xml">  &lt;drools:resource id="resource1" type="DRL" source="classpath:org/drools/container/spring/testSpring.drl"/&gt;

  &lt;drools:kbase id="kbase1"&gt;
    &lt;drools:resources&gt;
      &lt;drools:resource ref="resource1"/&gt;
    &lt;/drools:resources&gt;
  &lt;/drools:kbase&gt;

  &lt;bean id="mock-agenda-listener" class="org.drools.container.spring.MockAgendaEventListener" /&gt;
  &lt;bean id="mock-wm-listener" class="org.drools.container.spring.MockWorkingMemoryEventListener" /&gt;
  &lt;bean id="mock-process-listener" class="org.drools.container.spring.MockProcessEventListener" /&gt;

  &lt;drools:ksession id="statefulSession" type="stateful" kbase="kbase1" node="node1"&gt;
    &lt;drools:agendaEventListener ref="mock-agenda-listener"/&gt;
    &lt;drools:processEventListener ref="mock-process-listener"/&gt;
    &lt;drools:workingMemoryEventListener ref="mock-wm-listener"/&gt;
  &lt;/drools:ksession&gt;

</programlisting>
          </example>
        </section>

        <section>
          <title>Nested Elements:</title>

          <itemizedlist>
            <listitem>
              <para>bean</para>

              <itemizedlist>
                <listitem>
                  <para>class = String</para>
                </listitem>

                <listitem>
                  <para>name = String (optional)</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>

          <example>
            <title>Listener configuration example - using nested bean.</title>

            <programlisting language="xml">  &lt;drools:resource id="resource1" type="DRL" source="classpath:org/drools/container/spring/testSpring.drl"/&gt;

  &lt;drools:kbase id="kbase1"&gt;
    &lt;drools:resources&gt;
      &lt;drools:resource ref="resource1"/&gt;
    &lt;/drools:resources&gt;
  &lt;/drools:kbase&gt;

  &lt;drools:ksession id="statefulWithNestedBean" type="stateful" kbase="kbase1" node="node1"&gt;

    &lt;drools:agendaEventListener&gt;
      &lt;bean class="org.drools.container.spring.MockAgendaEventListener"/&gt;
    &lt;/drools:agendaEventListener&gt;

    &lt;drools:workingMemoryEventListener&gt;
      &lt;bean class="org.drools.container.spring.MockWorkingMemoryEventListener"/&gt;
    &lt;/drools:workingMemoryEventListener&gt;

    &lt;drools:processEventListener&gt;
      &lt;bean class="org.drools.container.spring.MockProcessEventListener"/&gt;
    &lt;/drools:processEventListener&gt;

  &lt;/drools:ksession&gt;


</programlisting>
          </example>
        </section>

        <section>
          <title>Empty Tag : Declaration with no 'ref' and without a nested
          bean</title>

          <para>When a listener is defined without a reference to a
          implementing bean and does not contain a nested bean,
          <emphasis>&lt;drools:workingMemoryEventListener/&gt;</emphasis> the
          underlying implementation adds the Debug version of the listener
          defined in the API.</para>

          <para>The debug listeners print the corresponding Event toString
          message to <emphasis>System.err. </emphasis></para>

          <example>
            <title>Listener configuration example - defaulting to the debug
            versions provided by the Knowledge-API .</title>

            <programlisting language="xml">  &lt;drools:resource id="resource1" type="DRL" source="classpath:org/drools/container/spring/testSpring.drl"/&gt;

  &lt;drools:kbase id="kbase1"&gt;
    &lt;drools:resources&gt;
      &lt;drools:resource ref="resource1"/&gt;
    &lt;/drools:resources&gt;
  &lt;/drools:kbase&gt;

  &lt;drools:ksession id="statefulWithDefault" type="stateful" kbase="kbase1" node="node1"&gt;

    &lt;drools:agendaEventListener/&gt; &lt;!-- attaches the org.drools.core.event.rule.DebugAgendaEventListener --&gt;
    &lt;drools:workingMemoryEventListener/&gt; &lt;!-- attaches the org.drools.core.event.rule.DebugWorkingMemoryEventListener --&gt;
    &lt;drools:processEventListener/&gt; &lt;!-- attaches the org.drools.core.event.DebugProcessEventListener --&gt;

  &lt;/drools:ksession&gt;


</programlisting>
          </example>
        </section>

        <section>
          <title>Mix and Match of different declaration styles</title>

          <para>The drools-spring module allows you to mix and match the
          different declarative styles within the same KnowledgeSession. The
          below sample provides more clarity.</para>

          <example>
            <title>Listener configuration example - mix and match of
            'ref'/nested-bean/empty styles.</title>

            <programlisting language="xml">  &lt;drools:resource id="resource1" type="DRL" source="classpath:org/drools/container/spring/testSpring.drl"/&gt;

  &lt;drools:kbase id="kbase1"&gt;
    &lt;drools:resources&gt;
      &lt;drools:resource ref="resource1"/&gt;
    &lt;/drools:resources&gt;
  &lt;/drools:kbase&gt;

  &lt;bean id="mock-agenda-listener" class="org.drools.container.spring.MockAgendaEventListener" /&gt;

  &lt;drools:ksession id="statefulWithMixAndMatchOfStyles" type="stateful" kbase="kbase1" node="node1"&gt;

     &lt;drools:workingMemoryEventListener&gt;
      &lt;bean class="org.drools.container.spring.MockWorkingMemoryEventListener"/&gt;
    &lt;/drools:workingMemoryEventListener&gt;

    &lt;drools:agendaEventListener ref="mock-agenda-listener"/&gt;

    &lt;drools:processEventListener/&gt; &lt;!-- attaches the org.drools.core.event.DebugProcessEventListener --&gt;

  &lt;/drools:ksession&gt;


</programlisting>
          </example>
        </section>

        <section>
          <title>Defining multiple listeners of the same type</title>

          <para>It is also valid to define multiple beans of the same event
          listener types for a KnowledgeSession.</para>

          <example>
            <title>Listener configuration example - multiple listeners of the
            same type.</title>

            <programlisting language="xml">  &lt;drools:resource id="resource1" type="DRL" source="classpath:org/drools/container/spring/testSpring.drl"/&gt;

  &lt;drools:kbase id="kbase1"&gt;
    &lt;drools:resources&gt;
      &lt;drools:resource ref="resource1"/&gt;
    &lt;/drools:resources&gt;
  &lt;/drools:kbase&gt;

  &lt;bean id="mock-wm-listener" class="org.drools.container.spring.MockWorkingMemoryEventListener" /&gt;

  &lt;drools:ksession id="statefulWithMultipleSameType" type="stateful" kbase="kbase1" node="node1"&gt;

    &lt;!-- 2 different implementations of the same listener attached to one ksession --&gt;
    &lt;drools:workingMemoryEventListener&gt;
      &lt;bean class="org.drools.container.spring.ConsoleWorkingMemoryEventListener"/&gt;
    &lt;/drools:workingMemoryEventListener&gt;

    &lt;drools:workingMemoryEventListener ref="mock-wm-listener"/&gt;

  &lt;/drools:ksession&gt;


</programlisting>
          </example>
        </section>
      </section>

      <section id="grouping-listeners">
        <title>Defining a Group of listeners:</title>

        <para>drools-spring allows for grouping of listeners. This is
        particularly useful when you define a set of listeners and want to
        attach them to multiple sessions. The grouping feature is also very
        useful, when we define a set of listeners for 'testing' and then want
        to switch them for 'production' use.</para>

       <section>
          <title>Attributes:</title>

          <table>
            <tgroup align="left" cols="3" colsep="1" rowsep="1">
              <thead>
                <row>
                  <entry align="center">Attribute</entry>

                  <entry align="center">Required</entry>

                  <entry align="center">Description</entry>
                </row>
              </thead>

              <tbody>
                <row>
                  <entry>ID</entry>

                  <entry>yes</entry>

                  <entry>Unique identifier</entry>
                </row>
              </tbody>
            </tgroup>
          </table>
	</section>
        <section>
          <title>Nested Elements:</title>

          <itemizedlist>
            <listitem>
              <para>drools:agendaEventListener...</para>
            </listitem>
            <listitem>
              <para>drools:workingMemoryEventListener...</para>
            </listitem>
            <listitem>
              <para>drools:processEventListener...</para>
            </listitem>
          </itemizedlist>
		  <para>  </para>
		  <note>The above mentioned child elements can be declared in any order. Only one declaration of each type is allowed in a group.</note>
		</section>
        <section>
          <title>Example:</title>
	<example>
          <title>Group of listeners - example</title>

          <programlisting language="xml">  &lt;drools:resource id="resource1" type="DRL" source="classpath:org/drools/container/spring/testSpring.drl"/&gt;

  &lt;drools:kbase id="kbase1"&gt;
    &lt;drools:resources&gt;
      &lt;drools:resource ref="resource1"/&gt;
    &lt;/drools:resources&gt;
  &lt;/drools:kbase&gt;

  &lt;bean id="mock-wm-listener" class="org.drools.container.spring.MockWorkingMemoryEventListener" /&gt;

  &lt;drools:ksession id="statelessWithGroupedListeners" type="stateless" kbase="kbase1" node="node1" listeners="<emphasis
              role="bold">mockListeners</emphasis>"/&gt;

  &lt;drools:eventListeners id="mockListeners"&gt;
    &lt;drools:agendaEventListener ref="mock-agenda-listener"/&gt;
    &lt;drools:processEventListener ref="mock-process-listener"/&gt;
    &lt;drools:workingMemoryEventListener ref="mock-wm-listener"/&gt;
  &lt;/drools:eventListeners&gt;

  &lt;drools:eventListeners id="debugListeners"&gt;
    &lt;drools:agendaEventListener/&gt;
    &lt;drools:processEventListener/&gt;
    &lt;drools:workingMemoryEventListener/&gt;
  &lt;/drools:eventListeners&gt;
</programlisting>
        </example>
		</section>
      </section>
    </section>
  </section>
  
  <section>
    <title>Integration with jBPM Human Task</title>

  <para>This chapter describes the infrastructure used when configuring a human task
  server with Spring as well as a little bit about the infrastructure used when 
  doing this.</para>

  <section>
    <title>How to configure Spring with jBPM Human task</title>

  <para>The jBPM human task server can be configured to use Spring persistence. 
  <xref linkend="spring-human-task-example"/> is an example of this which uses 
  local transactions and Spring's thread-safe EntityManager proxy.</para>
  
  <para>The following diagram shows the dependency graph used
  in <xref linkend="spring-human-task-example"/>.</para>

  <figure>
    <title>Spring Human Task integration injection dependencies</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/ht-spring-deps.png" format="PNG" 
                   align="center" width="100%" scalefit="1" />
      </imageobject>
    </mediaobject>
  </figure>

  <para>A <code>TaskService</code> instance is dependent on two other bean types: 
  a drools <code>SystemEventListener</code> bean as well as a 
  <code>TaskSessionSpringFactoryImpl</code> bean. The 
  <code>TaskSessionSpringFactoryImpl</code> bean is howerver <emphasis>not</emphasis> 
  injected into the <code>TaskService</code> bean because this would cause a 
  circular dependency. To solve this problem, when the <code>TaskService</code> 
  bean is injected into the <code>TaskSessionSpringFactoryImpl</code> bean, 
  the setter method used secretly injects the <code>TaskSessionSpringFactoryImpl</code> 
  instance back into the <code>TaskService</code> bean and initializes the 
  <code>TaskService</code> bean as well.</para>
 
  <para>The <code>TaskSessionSpringFactoryImpl</code> bean is responsible for 
  creating all the internal instances in human task that deal with transactions 
  and persistence context management. Besides a <code>TaskService</code> instance, 
  this bean also requires a transaction manager and a persistence context to 
  be injected. Specifically, it requires an instance of a 
  <code>HumanTaskSpringTransactionManager</code> bean (as a transaction manager) 
  and an instance of a <code>SharedEntityManagerBean</code> bean (as a persistence 
  context instance).</para> 

  <para> We also use some of the standard Spring beans in order to configure 
  persistence: there's a bean to hold the <code>EntityManagerFactory</code> 
  instance as well as the <code>SharedEntityManagerBean</code> instance. The 
  <code>SharedEntityManagerBean</code> provides a shared, thread-safe proxy 
  for the actual <code>EntityManager</code>.</para>

  <para>The <code>HumanTaskSpringTransactionManager</code> bean serves as a 
  wrapper around the Spring transaction manager, in this case the 
  <code>JpaTransactionManager</code>. An instance of a
  <code>JpaTransactionManager</code> bean is also instantiated because of this.</para> 

   <example xml:id="spring-human-task-example">
     <title>Configuring Human Task with Spring</title>
     <programlisting language="xml"><xi:include href="Chapter-Spring/extras/spring-human-task.xml" parse="text" /></programlisting>
   </example>

  <para>When using the <code>SharedEntityManagerBean</code> instance, it's important
  to configure the Spring transaction manager to use nested transactions. This is 
  because the <code>SharedEntityManagerBean</code> is a <emphasis>transactional</emphasis>
  persistence context and will close the persistence context after every operation. 
  However, the human task server needs to be able to access (persisted) entities
  after operations. Nested transactions allow us to still have access to entities
  that otherwise would have been detached and are no longer accessible, especially 
  when using an ORM framework that uses lazy-initialization of entities. </para>

  <para>Also, while the <code>TaskSessionSpringFactoryImpl</code> bean takes
  an <quote>useJTA</quote> parameter, at the moment, JTA transactions with 
  Spring have not yet been fully tested.</para>

  </section>

  </section>
</chapter>
